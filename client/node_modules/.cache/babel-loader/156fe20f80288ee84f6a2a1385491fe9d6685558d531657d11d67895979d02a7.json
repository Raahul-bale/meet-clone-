{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raahu\\\\Desktop\\\\google-meet-clone\\\\client\\\\src\\\\components\\\\VideoGrid.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './VideoGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoGrid = ({\n  stream,\n  userVideo,\n  peers,\n  userId,\n  userName,\n  isScreenSharing,\n  videoEnabled\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  // Create a map of peer video elements\n  const peerVideos = {};\n  _s(Object.keys(peers).forEach(_s(peerId => {\n    _s();\n    const peer = peers[peerId].peer;\n    const peerName = peers[peerId].userName;\n    peerVideos[peerId] = useRef();\n  }, \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\")), \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\");\n\n  // Calculate grid layout\n  const totalParticipants = Object.keys(peers).length + 1; // +1 for self\n  let gridClass = 'video-grid';\n  if (totalParticipants <= 1) {\n    gridClass += ' single';\n  } else if (totalParticipants <= 4) {\n    gridClass += ' grid-2';\n  } else if (totalParticipants <= 9) {\n    gridClass += ' grid-3';\n  } else {\n    gridClass += ' grid-4';\n  }\n  useEffect(() => {\n    Object.values(peerVideos).forEach(videoRef => {\n      if (stream && videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    });\n  }, [stream]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: gridClass,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: userVideo,\n        autoPlay: true,\n        playsInline: true,\n        muted: true,\n        className: !videoEnabled ? 'video-off' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), !videoEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-placeholder\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: userName.charAt(0).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-tag\",\n        children: [userName, \" \", isScreenSharing && '(Screen)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), Object.keys(peers).map(peerId => {\n      const peerName = peers[peerId].userName;\n      const isVideoEnabled = !(peers[peerId].isVideoEnabled === false);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: peerVideos[peerId],\n          autoPlay: true,\n          playsInline: true,\n          className: !isVideoEnabled ? 'video-off' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), !isVideoEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: peerName.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-tag\",\n          children: [peerName, \" \", peers[peerId].isScreenSharing && '(Screen)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), peers[peerId].isAudioEnabled === false && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"muted-indicator\",\n          children: \"\\uD83D\\uDD07\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, peerId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s2(VideoGrid, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VideoGrid;\nexport default VideoGrid;\nvar _c;\n$RefreshReg$(_c, \"VideoGrid\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","VideoGrid","stream","userVideo","peers","userId","userName","isScreenSharing","videoEnabled","_s2","_s","$RefreshSig$","peerVideos","Object","keys","forEach","peerId","peer","peerName","totalParticipants","length","gridClass","values","videoRef","current","srcObject","className","children","ref","autoPlay","playsInline","muted","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","map","isVideoEnabled","isAudioEnabled","_c","$RefreshReg$"],"sources":["C:/Users/raahu/Desktop/google-meet-clone/client/src/components/VideoGrid.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './VideoGrid.css';\n\nconst VideoGrid = ({ stream, userVideo, peers, userId, userName, isScreenSharing, videoEnabled }) => {\n  // Create a map of peer video elements\n  const peerVideos = {};\n  \n  Object.keys(peers).forEach((peerId) => {\n    const peer = peers[peerId].peer;\n    const peerName = peers[peerId].userName;\n    peerVideos[peerId] = useRef();\n  });\n\n  // Calculate grid layout\n  const totalParticipants = Object.keys(peers).length + 1; // +1 for self\n  let gridClass = 'video-grid';\n  \n  if (totalParticipants <= 1) {\n    gridClass += ' single';\n  } else if (totalParticipants <= 4) {\n    gridClass += ' grid-2';\n  } else if (totalParticipants <= 9) {\n    gridClass += ' grid-3';\n  } else {\n    gridClass += ' grid-4';\n  }\n\n  useEffect(() => {\n    Object.values(peerVideos).forEach((videoRef) => {\n      if (stream && videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    });\n  }, [stream]);\n\n  return (\n    <div className={gridClass}>\n      {/* Local user video */}\n      <div className=\"video-container\">\n        <video \n          ref={userVideo} \n          autoPlay \n          playsInline \n          muted \n          className={!videoEnabled ? 'video-off' : ''}\n        />\n        {!videoEnabled && (\n          <div className=\"video-placeholder\">\n            <div className=\"avatar\">{userName.charAt(0).toUpperCase()}</div>\n          </div>\n        )}\n        <div className=\"name-tag\">\n          {userName} {isScreenSharing && '(Screen)'}\n        </div>\n      </div>\n      \n      {/* Remote peer videos */}\n      {Object.keys(peers).map((peerId) => {\n        const peerName = peers[peerId].userName;\n        const isVideoEnabled = !(peers[peerId].isVideoEnabled === false);\n        \n        return (\n          <div className=\"video-container\" key={peerId}>\n            <video \n              ref={peerVideos[peerId]} \n              autoPlay \n              playsInline \n              className={!isVideoEnabled ? 'video-off' : ''}\n            />\n            {!isVideoEnabled && (\n              <div className=\"video-placeholder\">\n                <div className=\"avatar\">{peerName.charAt(0).toUpperCase()}</div>\n              </div>\n            )}\n            <div className=\"name-tag\">\n              {peerName} {peers[peerId].isScreenSharing && '(Screen)'}\n            </div>\n            {peers[peerId].isAudioEnabled === false && (\n              <div className=\"muted-indicator\">ðŸ”‡</div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default VideoGrid;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC,SAAS;EAAEC,KAAK;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,eAAe;EAAEC;AAAa,CAAC,KAAK;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACnG;EACA,MAAMC,UAAU,GAAG,CAAC,CAAC;EAErBF,EAAA,CAAAG,MAAM,CAACC,IAAI,CAACV,KAAK,CAAC,CAACW,OAAO,CAAAL,EAAA,CAAEM,MAAM,IAAK;IAAAN,EAAA;IACrC,MAAMO,IAAI,GAAGb,KAAK,CAACY,MAAM,CAAC,CAACC,IAAI;IAC/B,MAAMC,QAAQ,GAAGd,KAAK,CAACY,MAAM,CAAC,CAACV,QAAQ;IACvCM,UAAU,CAACI,MAAM,CAAC,GAAGlB,MAAM,CAAC,CAAC;EAC/B,CAAC,kCAAC;;EAEF;EACA,MAAMqB,iBAAiB,GAAGN,MAAM,CAACC,IAAI,CAACV,KAAK,CAAC,CAACgB,MAAM,GAAG,CAAC,CAAC,CAAC;EACzD,IAAIC,SAAS,GAAG,YAAY;EAE5B,IAAIF,iBAAiB,IAAI,CAAC,EAAE;IAC1BE,SAAS,IAAI,SAAS;EACxB,CAAC,MAAM,IAAIF,iBAAiB,IAAI,CAAC,EAAE;IACjCE,SAAS,IAAI,SAAS;EACxB,CAAC,MAAM,IAAIF,iBAAiB,IAAI,CAAC,EAAE;IACjCE,SAAS,IAAI,SAAS;EACxB,CAAC,MAAM;IACLA,SAAS,IAAI,SAAS;EACxB;EAEAxB,SAAS,CAAC,MAAM;IACdgB,MAAM,CAACS,MAAM,CAACV,UAAU,CAAC,CAACG,OAAO,CAAEQ,QAAQ,IAAK;MAC9C,IAAIrB,MAAM,IAAIqB,QAAQ,CAACC,OAAO,EAAE;QAC9BD,QAAQ,CAACC,OAAO,CAACC,SAAS,GAAGvB,MAAM;MACrC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAK0B,SAAS,EAAEL,SAAU;IAAAM,QAAA,gBAExB3B,OAAA;MAAK0B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B3B,OAAA;QACE4B,GAAG,EAAEzB,SAAU;QACf0B,QAAQ;QACRC,WAAW;QACXC,KAAK;QACLL,SAAS,EAAE,CAAClB,YAAY,GAAG,WAAW,GAAG;MAAG;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,EACD,CAAC3B,YAAY,iBACZR,OAAA;QAAK0B,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAChC3B,OAAA;UAAK0B,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAErB,QAAQ,CAAC8B,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC;QAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CACN,eACDnC,OAAA;QAAK0B,SAAS,EAAC,UAAU;QAAAC,QAAA,GACtBrB,QAAQ,EAAC,GAAC,EAACC,eAAe,IAAI,UAAU;MAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLtB,MAAM,CAACC,IAAI,CAACV,KAAK,CAAC,CAACkC,GAAG,CAAEtB,MAAM,IAAK;MAClC,MAAME,QAAQ,GAAGd,KAAK,CAACY,MAAM,CAAC,CAACV,QAAQ;MACvC,MAAMiC,cAAc,GAAG,EAAEnC,KAAK,CAACY,MAAM,CAAC,CAACuB,cAAc,KAAK,KAAK,CAAC;MAEhE,oBACEvC,OAAA;QAAK0B,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B3B,OAAA;UACE4B,GAAG,EAAEhB,UAAU,CAACI,MAAM,CAAE;UACxBa,QAAQ;UACRC,WAAW;UACXJ,SAAS,EAAE,CAACa,cAAc,GAAG,WAAW,GAAG;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC,EACD,CAACI,cAAc,iBACdvC,OAAA;UAAK0B,SAAS,EAAC,mBAAmB;UAAAC,QAAA,eAChC3B,OAAA;YAAK0B,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAAET,QAAQ,CAACkB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC;UAAC;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CACN,eACDnC,OAAA;UAAK0B,SAAS,EAAC,UAAU;UAAAC,QAAA,GACtBT,QAAQ,EAAC,GAAC,EAACd,KAAK,CAACY,MAAM,CAAC,CAACT,eAAe,IAAI,UAAU;QAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,EACL/B,KAAK,CAACY,MAAM,CAAC,CAACwB,cAAc,KAAK,KAAK,iBACrCxC,OAAA;UAAK0B,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACzC;MAAA,GAjBmCnB,MAAM;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBvC,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1B,GAAA,CAlFIR,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AAoFf,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}